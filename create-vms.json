{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D64s_v3",
      "metadata": {
        "description": "Size of the Virtual Machines to deploy"
      }
    },
    "vmCount": {
      "type": "int",
      "minValue": 1,
      "maxValue": 8,
      "metadata": {
        "description": "Number of Virtual Machines to deploy"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name for the virtual machine"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "subnetID": {
      "type": "string",
      "metadata": {
        "description": "Existing VNet subnet ID for the virtual machines"
      }
    },
    "dataDiskCount": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Number of data disks to attach to each VM"
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 4095,
      "metadata": {
        "description": "Size in GBs of each data disk"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "nicName": "[concat(parameters('vmName'),'-nic')]",
    "nsgName": "[concat(parameters('vmName'),'-nsg')]",
    "storageAccountType": "Premium_LRS",
    "publicIPAddressName": "[concat(parameters('vmName'),'-publicip')]",
    "publicIPAddressType": "Dynamic",
    "vmSize": "[parameters('vmSize')]",
    "subnetRef": "[parameters('subnetID')]",
    "diagnosticsStorageAccount": "[concat('d',uniqueString(resourceGroup().id,'d'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow_SSH",
            "properties": {
              "description": "Allow SSH access",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('diagnosticsStorageAccount')]",
      "location": "[variables('location')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {}
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[concat(parameters('vmName'),'-as')]",
      "location": "[variables('location')]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 20
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPAddressName'),copyIndex())]",
      "location": "[variables('location')]",
      "copy": {
        "name": "publicIPCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('vmName'),copyIndex())]"
        }
      }
    },
    {
      "apiVersion": "2017-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'),copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPAddressName'),copyIndex()))]"
      ],
      "copy": {
        "name": "nicCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('publicIPAddressName'),copyIndex()))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'),copyIndex())]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nicName'),copyIndex()))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccount'))]"
      ],
      "copy": {
        "name": "vmCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('vmName'),'-as'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'),copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "SUSE",
            "offer": "SLES-Standard",
            "sku": "12-SP3",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'),copyIndex(),'-','osdisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('storageAccountType')]"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('dataDiskCount')]",
              "input": {
                "name": "[concat(parameters('vmName'),copyIndex('vmCopy'),'-datadisk',copyIndex('dataDisks'))]",
                "diskSizeGB": "[parameters('dataDiskSize')]",
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "caching": "None",
                "managedDisk": {
                  "storageAccountType": "[variables('storageAccountType')]"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', variables('diagnosticsStorageAccount'), '.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyIndex(),'/init')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', concat(parameters('vmName'),copyIndex()))]"
      ],
      "copy": {
        "name": "initCopy",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/arsenvlad/simple-nfs-load-server/master/init.sh"
          ],
          "commandToExecute": "bash init.sh"
        },
        "protectedSettings": {}
      }
    }
  ],
  "outputs": {}
}